jQuery(document).ready(function (e) {
  var t,
    s,
    n = 2500,
    a = 3800;
  function o(e) {
    var t = d(e);
    if (e.parents('.cd-headline').hasClass('type')) {
      var i = e.parent('.cd-words-wrapper');
      i.addClass('selected').removeClass('waiting'),
        setTimeout(function () {
          i.removeClass('selected'),
            e
              .removeClass('is-visible')
              .addClass('is-hidden')
              .children('i')
              .removeClass('in')
              .addClass('out');
        }, 500),
        setTimeout(function () {
          r(t, 150);
        }, 1300);
    } else if (e.parents('.cd-headline').hasClass('letters')) {
      var s = e.children('i').length >= t.children('i').length;
      c(e.find('i').eq(0), e, s, 50), l(t.find('i').eq(0), t, s, 50);
    } else
      e.parents('.cd-headline').hasClass('clip')
        ? e
            .parents('.cd-words-wrapper')
            .animate({ width: '2px' }, 600, function () {
              u(e, t), r(t);
            })
        : e.parents('.cd-headline').hasClass('loading-bar')
        ? (e.parents('.cd-words-wrapper').removeClass('is-loading'),
          u(e, t),
          setTimeout(function () {
            o(t);
          }, a),
          setTimeout(function () {
            e.parents('.cd-words-wrapper').addClass('is-loading');
          }, 800))
        : (u(e, t),
          setTimeout(function () {
            o(t);
          }, n));
  }
  function r(e, t) {
    e.parents('.cd-headline').hasClass('type')
      ? (l(e.find('i').eq(0), e, !1, t),
        e.addClass('is-visible').removeClass('is-hidden'))
      : e.parents('.cd-headline').hasClass('clip') &&
        e
          .parents('.cd-words-wrapper')
          .animate({ width: e.width() + 10 }, 600, function () {
            setTimeout(function () {
              o(e);
            }, 1500);
          });
  }
  function c(t, i, s, a) {
    if (
      (t.removeClass('in').addClass('out'),
      t.is(':last-child')
        ? s &&
          setTimeout(function () {
            o(d(i));
          }, n)
        : setTimeout(function () {
            c(t.next(), i, s, a);
          }, a),
      t.is(':last-child') && e('html').hasClass('no-csstransitions'))
    ) {
      var r = d(i);
      u(i, r);
    }
  }
  function l(e, t, i, s) {
    e.addClass('in').removeClass('out'),
      e.is(':last-child')
        ? (t.parents('.cd-headline').hasClass('type') &&
            setTimeout(function () {
              t.parents('.cd-words-wrapper').addClass('waiting');
            }, 200),
          i ||
            setTimeout(function () {
              o(t);
            }, n))
        : setTimeout(function () {
            l(e.next(), t, i, s);
          }, s);
  }
  function d(e) {
    return e.is(':last-child') ? e.parent().children().eq(0) : e.next();
  }
  function u(e, t) {
    e.removeClass('is-visible').addClass('is-hidden'),
      t.removeClass('is-hidden').addClass('is-visible');
  }
  e('.cd-headline.letters')
    .find('b')
    .each(function () {
      var t = e(this),
        s = t.text().split(''),
        n = t.hasClass('is-visible');
      for (i in s)
        t.parents('.rotate-2').length > 0 && (s[i] = '<em>' + s[i] + '</em>'),
          (s[i] = n ? '<i class="in">' + s[i] + '</i>' : '<i>' + s[i] + '</i>');
      var a = s.join('');
      t.html(a).css('opacity', 1);
    }),
    (t = e('.cd-headline')),
    (s = n),
    t.each(function () {
      var t = e(this);
      if (t.hasClass('loading-bar'))
        (s = a),
          setTimeout(function () {
            t.find('.cd-words-wrapper').addClass('is-loading');
          }, 800);
      else if (t.hasClass('clip')) {
        var i = t.find('.cd-words-wrapper'),
          n = i.width() + 10;
        i.css('width', n);
      } else if (!t.hasClass('type')) {
        var r = t.find('.cd-words-wrapper b'),
          c = 0;
        r.each(function () {
          var t = e(this).width();
          t > c && (c = t);
        }),
          t.find('.cd-words-wrapper').css('width', c);
      }
      setTimeout(function () {
        o(t.find('.is-visible').eq(0));
      }, s);
    });
});
const blob = document.getElementById('blob');
(document.onpointermove = e => {
  const { clientX: t, clientY: i } = e;
  blob.animate(
    { left: `${t + window.pageXOffset}px`, top: `${i + window.pageYOffset}px` },
    { duration: 3e3, fill: 'forwards' }
  );
}),
  (document.getElementById('cards').onmousemove = e => {
    for (const t of document.getElementsByClassName('card')) {
      const i = t.getBoundingClientRect(),
        s = e.clientX - i.left,
        n = e.clientY - i.top;
      t.style.setProperty('--mouse-x', `${s}px`),
        t.style.setProperty('--mouse-y', `${n}px`);
    }
  }),
  (window.onload = () => {
    for (const e of document.getElementsByClassName('card')) {
      const t = e.querySelector('.card-text'),
        i = e.querySelector('.card-subtext');
      console.log(t),
        console.log(i),
        (t.innerHTML = e.getAttribute('card-text')),
        (i.innerHTML = e.getAttribute('card-subtext'));
    }
  });
const magicAreas = [...document.querySelectorAll('.c-magic-area')],
  getAreaDetails = e => {
    const t = e.clientWidth,
      i = e.clientHeight,
      s = e.getBoundingClientRect(),
      n = s.top + window.scrollY,
      a = s.left;
    return console.log(s.top), { left: a, height: i, top: n, width: t };
  },
  setTweenArea = (e, t) => {
    const { left: i, height: s, top: n, width: a } = getAreaDetails(e);
    gsap.set(t, { top: n, left: i, width: a, height: s });
  },
  tweenMagicArea = (e, t) => {
    const { left: i, height: s, top: n, width: a } = getAreaDetails(e);
    gsap.to(t, 0.5, {
      left: i,
      top: n,
      width: a,
      height: s,
      ease: Power3.easeInOut,
    });
  },
  getMagicActiveElement = e =>
    e.filter(
      e =>
        e.classList.contains('is-magic-active') ||
        'page' === e.getAttribute('aria-current')
    ),
  moveMagicArea = (e, t, i) => {
    const s = getMagicActiveElement(e);
    e.map(e => {
      e.addEventListener('mouseenter', function (e) {
        tweenMagicArea(e.target, t);
      }),
        e.addEventListener('focus', function (e) {
          tweenMagicArea(e.target, t);
        }),
        i &&
          s.length &&
          (e.addEventListener('mouseleave', function (e) {
            tweenMagicArea(s[0], t);
          }),
          e.addEventListener('focusout', function (e) {
            tweenMagicArea(s[0], t);
          }));
    });
  },
  setMagic = (e, t) => {
    const i = getMagicActiveElement(e);
    i.length ? setTweenArea(i[0], t) : setTweenArea(e[0], t);
  },
  initMagic = ({ isResize: e } = { isResize: !1 }) => {
    magicAreas.length &&
      magicAreas.map(t => {
        const i = t.getAttribute('data-target-class'),
          s = [...document.querySelectorAll(i)];
        if (s.length && (setMagic(s, t), !e)) {
          const e = 'true' === t.getAttribute('data-tween-back');
          moveMagicArea(s, t, e);
        }
      });
  };
initMagic(),
  window.addEventListener(
    'resize',
    _.throttle(function () {
      initMagic({ isResize: !0 });
    }, 100)
  ),
  VanillaTilt.init(document.querySelector('.c-fe30__inner'), {
    max: 20,
    perspective: 1e3,
    speed: 300,
  });
